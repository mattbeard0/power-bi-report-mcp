
{
    "$schema": {
      "description": "Defines the schema to use for an item.",
      "type": "string",
      "const": "https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualContainer/2.1.0/schema.json"
    },
    "name": {
      "description": "A unique identifier for the visual across the whole page.",
      "maxLength": 50,
      "type": "string"
    },
    "position": {
      "$ref": "#/definitions/VisualContainerPosition",
      "description": "Defines where the visual is position on the page and how big it should be, along\nwith z-index (stacking) for that visual.\nAlso defines the order in which visuals are navigated when using just keyboard (tabOrder)."
    },
    "visual": {
      "description": "Defines a chart to be shown inside of this container.",
      "$ref": "../../visualConfiguration/2.1.0/schema-embedded.json"
    },
    "visualGroup": {
      "description": "Defines that this container should be used as a grouping container.",
      "$ref": "#/definitions/VisualGroupConfig"
    },
    "parentGroupName": {
      "description": "Name of the parent group (visual container), if it is part of one.",
      "type": "string"
    },
    "filterConfig": {
      "description": "Filters that apply to all this visual - on top of the filters defined for the report and page.",
      "$ref": "../../filterConfiguration/1.2.0/schema-embedded.json"
    },
    "isHidden": {
      "description": "Marks the visual as hidden.",
      "type": "boolean"
    },
    "annotations": {
      "description": "Additional information to be saved (for example comments, readme, etc) for this visual.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/Annotation"
      }
    },
    "howCreated": {
      "description": "Source of creation of this visual.",
      "type": "string",
      "anyOf": [
        {
          "const": "Default",
          "description": "Used when it doesn't fall in any of the buckets below."
        },
        {
          "const": "Copilot",
          "description": "Created by copilot."
        },
        {
          "const": "CheckboxTickedInFieldList",
          "description": "Selecting data from field list."
        },
        {
          "const": "DraggedToCanvas",
          "description": "Dragging data from field list to the canvas."
        },
        {
          "const": "VisualTypeIconClicked",
          "description": "Clicking a specific visual icon in visualizations list."
        },
        {
          "const": "DraggedToFieldWell",
          "description": "Dragging data from field list to field wells."
        },
        {
          "const": "InsertVisualButton",
          "description": "Clicking the \"Insert visual\" button in ribbon."
        },
        {
          "const": "WhatIfParameterControl",
          "description": "Automatically by what-if parameter."
        },
        {
          "const": "QnaAppBar",
          "description": "Ask a question in app bar."
        },
        {
          "const": "QnaDoubleClick",
          "description": "Double clicking on the canvas to generate a Q&A visual."
        },
        {
          "const": "QnaKeyboardShortcut",
          "description": "Use keyboard shortcut for Q&A visual."
        },
        {
          "const": "FieldParameterControl",
          "description": "Automatically by field parameters."
        },
        {
          "const": "CanvasBackgroundContextMenu",
          "description": "Using on-object context menu for the canvas."
        },
        {
          "const": "ContextMenuPaste",
          "description": "By using paste from context manu."
        },
        {
          "const": "CopyPaste",
          "description": "By using copy paste."
        },
        {
          "const": "SummarizeVisualContainer",
          "description": "By using context menu Summarize."
        }
      ]
    }
  }
  